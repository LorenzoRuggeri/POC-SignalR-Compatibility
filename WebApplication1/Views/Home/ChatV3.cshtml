
@{
    ViewBag.Title = "Chat";
}
<h2>Chat (con SignalR Javascript Client per ASP.Net Core)</h2>
<h1>Package: @Html.Raw("@microsoft/signalR") </h1>

<div id="send-form" class="container">
    <input type="text" id="message-textbox" />
    <input type="button" id="send-button" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="messages-list">
    </ul>
</div>

@section scripts {
    <!--Script references. -->
    <!-- <script src="~/bundles/signalR-v3"></script> -->
    <script src="~/Scripts/core-current-signalR/signalr.js"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script type="text/javascript">
        // Bind DOM elements
        var sendForm = document.getElementById("send-form");
        var sendButton = document.getElementById("send-button");
        var messagesList = document.getElementById("messages-list");
        var messageTextBox = document.getElementById("message-textbox");

        function appendMessage(user, message) {
            var li = document.createElement("li");
            //li.textContent = `${user}: ${message}`;
            li.innerText = `${user}: ${message}`;
            messagesList.appendChild(li);
        }

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://localhost:7172/chat")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        sendButton.addEventListener("click", function (evt) {
            var message = messageTextBox.value;
            messageTextBox.value = "";
            connection.send("SendMessage", message);
            evt.preventDefault();
        });

        connection.on("SendMessage", function (sender, message) {
            console.log("Event SendMessage ", sender, message);
            appendMessage(sender, message);
        });

        connection.on("UserConnected", function (sender, message) {
            console.log("Event UserConnected ", sender, message);
            appendMessage(sender, message);
        });

        connection.on("UserDisconnected", function (sender, message) {
            console.log("Event UserDisconnected ", sender, message);
            appendMessage(sender, message);
        });

        connection.on("ReceiveMessage", (sender, message) => {
            console.log("Event ReceiveMessage ", sender, message);
            appendMessage(sender, message);
        });

        connection.start().then(function () {
            messageTextBox.disabled = false;
            sendButton.disabled = false;
        })
            .catch(err => console.error(err.toString()));
    </script>
}
